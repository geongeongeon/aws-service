name: Deploy Backend Server To EC2

on:
  push:
    tags:
      - "v.[0-9]+.[0-9]+.[0-9]+"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 소스 코드 가져오기
      - name: Checkout Source Code
        uses: actions/checkout@v4

      # JDK 설치
      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: 17

      # Gradle 빌드
      - name: Grant Execute Permission For Gradlew
        run: chmod +x gradlew
      - name: Build
        run: ./gradlew clean build -x test

      # AWS 인증
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      # Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Docker 이미지 빌드 및 푸쉬
      - name: Build And Push Backend Service
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/aws-service:latest .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/aws-service:latest

      #SSH로 EC2 접속 및 컨테이너 실행
      - name: SSH To EC2 And Run Docker Container
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.AWS_EC2_HOST }}
          username: ${{ secrets.AWS_EC2_USERNAME }}
          key: ${{ secrets.AWS_EC2_PRIVATE_KEY }}
          script_stop: true
          script: |
            docker stop aws-service || true
            docker rm aws-service || true
            docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/aws-service:latest
            docker run -d --name aws-service \
              --network aws-service-network \
              -p 80:8080 \
              -e SPRING_PROFILES_ACTIVE=prod \
              -e AWS_RDS_ENDPOINT=${{ secrets.AWS_RDS_ENDPOINT }} \
              -e AWS_RDS_USER=${{ secrets.AWS_RDS_USER }} \
              -e AWS_RDS_PASSWORD=${{ secrets.AWS_RDS_PASSWORD }} \
              ${{ secrets.DOCKER_HUB_USERNAME }}/aws-service:latest

